version: "3.8"

services:
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"

  producer-service:
    build:
      context: .
      dockerfile: producer-service/Dockerfile
    ports:
      - "8091:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - ml-service

  consumer-service:
    build:
      context: .
      dockerfile: consumer-service/Dockerfile
    ports:
      - "8090:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka
      - postgres

  kafka:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: recommendations
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
      - //var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yml:/etc/promtail/config.yml
    command:
      - -config.file=/etc/promtail/config.yml
    ports:
      - "9080:9080"
    depends_on:
      - loki
